<?xml version="1.0" encoding="UTF-8"?>
<!-- DOCTYPE이 sqlMap인 xml 파일은 처리할 SQL 명령을 기억하는 xml 파일이다. -->
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!--
    태그를 이용해서 저장하고 출력하는 내용들을 한다
-->

<!--
    id: SQL 명령 식별
    parameterClass: SQL 명령으로 DAO 클래스에서 전달되는 데이터 타입을 적는다
    resultClass: SQL 명령문이 실행되고 DAO 클래스로 리턴되는 데이터의 타입을 적는다
-->
<sqlMap namespace="com.kh.vo.GuestbookVO">
  <insert id="insert" parameterClass="vo">INSERT INTO guestbook(idx, name, password, memo, ip)
    values (guestbook_idx_seq.nextval, #name#, #password#, #memo#, #ip#)</insert>

  <!-- 전체 글의 개수를 얻어온다 -->
  <select id="selectCount" resultClass="int"> SELECT COUNT(*) FROM guestbook </select>

  <!-- 페이지의 글 목록을 얻어온다 -->
  <select id="selectList" parameterClass="java.util.HashMap" resultClass="vo">
    <!--
      startNo: 페이지 표시할 글의 시작 인덱스
      endNo: 페이지에 표시할 글의 마지막 인덱스
     -->
    <!--
     SQL문을 XML 파일 안에서 작성할 때 SQL의 특수 기호들이
     XML 파일에서 특정한 문자나 특수한 행동을 발생시킬 수 있음
     모든 내용을 문자열로 인식할 수 있게 <![CDATA[ ]]> 내용을 적음
    -->
    <![CDATA[
      select * from (
        select rownum rnum, TT.* from (
          select * from guestbook order by idx desc
        ) TT where rownum <= #endNo#
      ) where rnum >= #startNo#
    ]]>
  </select>

  <!-- 글 1건을 얻어온다 -->
  <select id="selectByIdx" parameterClass="int" resultClass="vo">
    <![CDATA[
      SELECT * FROM guestbook WHERE idx = #idx#
    ]]>
  </select>

  <!-- 글 1건을 삭제한다 -->
  <delete id="delete" parameterClass="int">
    <![CDATA[
      DELETE FROM guestbook WHERE idx = #idx#
    ]]>
  </delete>

  <!-- 글 1건을 수정한다 -->
  <update id="update" parameterClass="vo">
    <![CDATA[
      UPDATE guestbook SET name = #name#, memo = #memo#
      WHERE idx = #idx#
    ]]>
  </update>

  <!--
    카테고리별 검색어를 포함하는 글의 개수를 얻어온다. 동적 쿼리 사용
    iBatis는 기본적으로 동적 태그를 지원한다ㄴㅇ
    isEqual 태그를 사용해서 SQL 명령의 실행 조건을 지정할 수 있다
    property 속성에는 parameterClass로 넘어오는 조건을 비교할 필드 이름을 적는다
    compareValue 속성에는 property 속성에 지정한 필드와 비교할 값을 적는다
  -->
  <select id="selectCountMulti" parameterClass="param" resultClass="int">
    <isEqual property="category" compareValue="내용"> memo LIKE '%' || #item# || '%' </isEqual>
    <isEqual
      property="category" compareValue="이름"> name LIKE '%' || #item# || '%' </isEqual>
    <isEqual
      property="category" compareValue="내용+이름"> memo LIKE '%' || #item# || '%' AND name LIKE '%' ||
    #item# || '%' </isEqual>
  </select>

  <!--
    카테고리별 검색어를 포함하는 1페이지 분량의 글 목록을 얻어온다
  -->
  <select id="selectListMulti" parameterClass="param" resultClass="vo"> select * from ( select
    rownum rnum, TT.* from ( select * from guestbook <isEqual property="category" compareValue="내용">
    memo LIKE '%' || #item# || '%' </isEqual>
          <isEqual
      property="category" compareValue="이름"> name LIKE '%' || #item# || '%' </isEqual>
          <isEqual
      property="category" compareValue="내용+이름"> memo LIKE '%' || #item# || '%' AND name LIKE '%' ||
    #item# || '%' </isEqual> ORDER BY idx DESC <![CDATA[
        ) TT where rownum <= #endNo#
      ) where rnum >= #startNo#
    ]]>
  </select>

  <!-- 메모(내용)필드에 검색어가 포함된 글의 개수를 얻어온다. 오라클 : like '%'||#검색어#||'%' mysql : 
		like concat('%', #검색어# ,'%') -->
  <select id="selectCountMemo" parameterClass="String" resultClass="int"> SELECT COUNT(*) FROM
    guestbook WHERE memo LIKE '%' || #item# || '%' </select>

  <!-- 메모 필그에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
  <select id="selectListMemo" parameterClass="param" resultClass="vo">
    <![CDATA[
      select * from (
        select rownum rnum, TT.* from (
          select * from guestbook
          WHERE memo LIKE '%' || #item# || '%'
          order by idx desc
        ) TT where rownum <= #endNo#
      ) where rnum >= #startNo#
    ]]>
  </select>

  <!-- name 필드 검색어가 포함된 글의 개수를 얻어온다. -->
  <select id="selectCountName" parameterClass="String" resultClass="int"> SELECT COUNT(*) FROM
    guestbook WHERE name LIKE '%' || #item# || '%' </select>

  <!-- name 필드 검색어가 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
  <select id="selectListName" parameterClass="param" resultClass="vo">
    <![CDATA[
      select * from (
        select rownum rnum, TT.* from (
          select * from guestbook
          WHERE name LIKE '%' || #item# || '%'
          order by idx desc
        ) TT where rownum <= #endNo#
      ) where rnum >= #startNo#
    ]]>
  </select>

  <!-- 내용하고 name 둘다 포함된 글의 개수 얻어온다. -->
  <!-- 내용 + name 필드 검색어가 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
</sqlMap>